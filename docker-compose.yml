version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: hcheck
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ma3str0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  # HAPI FHIR Server
  fhir-server:
    image: haproject/hapi:latest
    ports:
      - "8090:8080"
    environment:
      spring.datasource.url: "jdbc:postgresql://postgres:5432/hcheck"
      spring.datasource.username: postgres
      spring.datasource.password: ma3str0
      spring.datasource.driverClassName: org.postgresql.Driver
      hapi.fhir.subscription.resthook_enabled: "true"
      hapi.fhir.subscription.websocket_enabled: "true"
      hapi.fhir.client_id_strategy: ANY
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/fhir/metadata || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # FastAPI Backend
  backend:
    build: ./app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:ma3str0@postgres:5432/hcheck
    depends_on:
      fhir-server:
        condition: service_healthy
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend

volumes:
  postgres_data: